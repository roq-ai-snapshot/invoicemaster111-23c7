generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model contract {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id String       @db.Uuid
  client_id       String       @db.Uuid
  start_date      DateTime     @db.Date
  end_date        DateTime     @db.Date
  user            user         @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model financial_report {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id String       @db.Uuid
  report_date     DateTime     @db.Date
  total_revenue   Int
  total_expenses  Int
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model invoice {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id String       @db.Uuid
  client_id       String       @db.Uuid
  status          String       @db.VarChar(255)
  amount          Int
  user            user         @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  payment         payment[]
}

model organization {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name              String              @db.VarChar(255)
  user_id           String              @db.Uuid
  contract          contract[]
  financial_report  financial_report[]
  invoice           invoice[]
  user              user                @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  organization_user organization_user[]
}

model organization_user {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id String       @db.Uuid
  user_id         String       @db.Uuid
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user            user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model payment {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  invoice_id   String   @db.Uuid
  amount       Int
  payment_date DateTime @db.Date
  invoice      invoice  @relation(fields: [invoice_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email             String              @unique @db.VarChar(255)
  firstName         String?             @db.VarChar(255)
  lastName          String?             @db.VarChar(255)
  roq_user_id       String              @db.VarChar(255)
  tenant_id         String              @db.VarChar(255)
  contract          contract[]
  invoice           invoice[]
  organization      organization[]
  organization_user organization_user[]
}
